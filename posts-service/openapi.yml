openapi: 3.0.3
info:
  title: Posts Service
  version: 1.0.0
paths:
  /posts:
    get:
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: page_size
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPostsResponse'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Bad Gateway
          content:
            text/plain:
              schema:
                type: string
    post:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Bad Gateway
          content:
            text/plain:
              schema:
                type: string
  /posts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Bad Gateway
          content:
            text/plain:
              schema:
                type: string
    put:
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePostRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Bad Gateway
          content:
            text/plain:
              schema:
                type: string
    delete:
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePostResponse'
        '401':
          description: Unauthorized
          content:
            text/plain:
              schema:
                type: string
        '502':
          description: Bad Gateway
          content:
            text/plain:
              schema:
                type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Post:
      type: object
      properties:
        id:
          type: string
        owner_id:
          type: string
        title:
          type: string
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - owner_id
        - title
        - content
        - created_at
        - updated_at
    CreatePostRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
    UpdatePostRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
    DeletePostResponse:
      type: object
      properties:
        success:
          type: boolean
      required:
        - success
    ListPostsResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        page:
          type: integer
        page_size:
          type: integer
        total:
          type: integer
      required:
        - posts
        - page
        - page_size
        - total
